{"version":3,"sources":["../../src/ChooseChkBox/Question.js","../../src/ChooseChkBox/Answers.js","../../src/ChooseChkBox/AnswersDiv.js","../../src/ChooseChkBox/result.js","../../src/ChooseChkBox/Choice.js","../../src/ChooseChkBox/MultiChoice.js","../../src/index.js","App.js","index.js"],"names":["Question","props","console","className","styles","id","questId","src","imagepath","Answers","useState","classDisplay","type","name","value","disabled","onClick","e","setValue","AnswersDiv","result","state","qus","selected_answer","JSON","constructor","ans","ques","temp","quiz","questions","Id","this","answerContent","key","onAnswerSelected","disable","setSelectedAnswer","view","correct_answer","corrAns","selAns","question","map","quest","cardHeader","index","cardBlock","content","qtype","questionType","correctAns","stuSelection","data","students","quizApi","answers","questionImagePath","AnswerType","grade_points","ExampleComponent","text","MultiChoiceQuiz","App","ReactDOM","render","document","getElementById"],"mappings":"+xCAIA,SAASA,EAASC,GAGhB,OAFAC,0BAA0BD,EAA1BC,WAGE,6BACA,wBAAIC,UAAWC,EAAf,SAAgCC,GAAIJ,EAAMK,SAAUL,EADpD,SAED,cAACA,QAA6B,yBAAKM,IAAMN,EAAMO,YAAe,wBAH/D,OCJF,SAASC,EAAQR,GAAO,MACIS,mBAA1B,SADsB,mBAChB,GADgB,WAGtBR,YAAY,iBAAmBD,EAA/BC,iBACA,IAQIS,EAAeP,EAAnB,aAgBA,OAdAF,YAAY,mBAAqBD,EAAjCC,MACAA,YAAY,6BAA+BD,EAA/B,oBAA6DA,EAA7D,6BAAgGA,EAA5GC,iBACID,wBAAgCA,kBAAwBA,EAA5D,iBACEU,EAAe,CAACP,EAAD,aAAsBA,EAAtB,iBAAfO,MAEEV,sBAAJ,iBAAkCA,SAC3BA,oBAA0BA,EAA1BA,gBAAkDA,kBAAwBA,EAA3E,iBAAoGA,kBAAwBA,EAAhI,eACEU,EAAe,CAACP,EAAD,aAAsBA,EAAtB,iBADjB,KAESH,oBAA0BA,EAA9B,gBACHU,EAAe,CAACP,EAAD,aAAsBA,EAAtB,eAAfO,OAGJT,YAAY,mBAAZA,GAIE,yBAAKC,UAAU,gCACb,2BACES,KADF,SAEET,UAFF,EAGEU,KAHF,cAIEC,MAAOb,EAJT,cAKEc,SAAUd,oBAA0BA,EAA1BA,cACVe,QAjCeC,YACnBf,YAAY,eAAiBe,SAA7Bf,OACA,gBAAGD,SACHiB,EAASD,SAATC,OACAjB,oBAAwBgB,SAAxBhB,MAAwCA,EAAxCA,cCRJ,SAASkB,EAAWlB,GAAO,MACES,mBAAzB,IADuB,mBACjB,GADiB,WAWnBC,EAAeP,EAAnB,aAeA,OAdAF,YAAY,mBAAmBD,EAA/BC,MACAA,YAAY,6BAA+BD,EAA/B,oBAA2DA,EAAvEC,gBACID,wBAAgCA,kBAAwBA,EAA5D,iBACEU,EAAe,CAACP,EAAD,aAAsBA,EAAtB,iBAAfO,MAEEV,sBAAJ,iBAAkCA,SAC3BA,oBAA0BA,EAA1BA,gBAAkDA,kBAAwBA,EAA3E,iBAAqGA,kBAAwBA,EAAjI,eACEU,EAAe,CAACP,EAAD,aAAsBA,EAAtB,iBADjB,KAESH,oBAA0BA,EAA9B,gBACLU,EAAe,CAACP,EAAD,aAAsBA,EAAtB,eAAfO,OAGJT,YAAY,mBAAZA,GAGM,yBAAKC,UAAU,gCAEX,2BACJS,KADI,QAEJT,UAFI,EAGJU,KAAMZ,EAHF,cAIJM,IAAKN,EAJD,cAKJc,SAAUd,oBAA0BA,EAA1BA,cACVe,QAhCiBC,YACnB,gBAAGhB,SACHC,YAAY,eAAee,SAA3Bf,OACAgB,EAASD,SAATC,OACAjB,oBAAwBgB,SAAxBhB,KAAsCA,EAAtCA,cCFN,IAAMmB,EAASnB,YAkBb,OACE,6BACE,4BAAQE,UAAR,YAA8Ba,QAnBX,WACnBd,YAAY,mCAAmCD,oBAA/CC,iBAEA,IAAImB,EAAJ,GACApB,sBAA0BqB,YACxBpB,YAAY,YAAYoB,EAAxBpB,IACAA,YAAY,iCAAiCoB,EAA7CpB,iBACAmB,OAAW,CACT,OAAWC,EADF,GAET,gBAAmBA,EAAIC,qBAI3BrB,eACNA,YAAYsB,eAAZtB,MAGE,YCnBF,E,kDAEIuB,WAAW,GAAQ,kCACf,kBADe,iBA2BA,cACfvB,YAAY,2BAA6BwB,EAA7B,QAAZxB,GACA,WAAc,4BAA8ByB,YAC5CzB,YAAY,QAAQyB,EAApBzB,IACQyB,OAAJ,GACIzB,4BACAyB,qBAGAzB,kCAGP,4BAA8B0B,YAAI,OAAI1B,YAAY,MAAM0B,EAAxD,qBArCD,sBAA2B,sBAA3B,KAA2B,gBAC3B,yBAA8B,yBAA9B,KAA8B,gBAC9B,QAAa,CACTC,KAAM,CACFC,UAAW,CACP,CACIC,GADJ,GAEIR,gBAAiB,MAErB,CACIQ,GADJ,GAEIR,gBAAiB,MAErB,CACIQ,GADJ,GAEIR,gBAAiB,MAErB,CACIQ,GADJ,GAEIR,gBAAiB,SArBlB,E,gEA0CA,SAIf,OAFArB,YAAY,kBAAoB8B,KAAK/B,MAAzB,yBAAwD+B,KAAK/B,MAAzEC,MACAA,YAAY,uDAAZA,GAGI,yBAAKC,UAAU,gCACX,qBACI8B,cAAeC,EADnB,QAEIC,iBAAkBH,KAAK/B,MAF3B,iBAGImC,QAASJ,KAAK/B,MAHlB,QAIIoC,kBAAmBL,KAJvB,iBAKI1B,QALJ,EAMIgC,KAAMN,KAAK/B,MANf,KAOIsB,gBAPJ,EAQIgB,eAAkBC,O,6CAMZ,SAGlB,OAFAtC,gCAAiCgC,EAAjChC,SAGI,yBAAKC,UAAU,gCACX,qBACI8B,cAAeC,EADnB,QAEIC,iBAAkBH,KAAK/B,MAF3B,iBAGImC,QAASJ,KAAK/B,MAHlB,QAIIoC,kBAAmBL,KAJvB,iBAKI1B,QALJ,EAMIgC,KAAMN,KAAK/B,MANf,KAOIsB,gBAPJ,EAQIgB,eAAkBC,O,+BAMzB,WACDC,EAAJ,GACA,OACI,6BACKT,KAAK/B,MAAMyC,SAASC,KAAI,cAOrB,OANC,6BAAoCC,EAApC,GAEGH,EADH,gBAAG,aACS,0BADZ,gBAGYG,EAATH,gBAGJ,yBAAKtC,UAAW,CAACC,EAAD,KAAaA,EAAb,uBACZ,yBAAKD,UAAWC,EAAOyC,YACnB,wCAAa,8BAAOC,EAF5B,KAII,yBAAK3C,UAAWC,EAAO2C,WACnB,yBAAK5C,UAAWC,EAAhB,SAAiC8B,IAAKY,IACtC,qBAAUE,QAASJ,EAAnB,SAAmCtC,QAASsC,EAA5C,GAAsDpC,UAAWoC,EAAjE,kBAA0FK,MAAOL,EAAMM,eAGvG,yBAAK/C,UAAU,OACV,SAACyC,aAA+BA,eAAmBV,YAAG,OAAI,wBAA6BU,EAA7B,KAA8CA,EAAxG,eAA8HA,eAAmBV,YAAG,OAAI,2BAAgCU,EAAhC,KAAgDA,EAXrN,qBAkBH,gBAACZ,KAAK/B,MAAMqC,KAAwB,oBAAaN,KAAjD,OA3BT,Q,GAtFR,aCHC,E,kDAECP,WAAW,GAAQ,kCACjB,kBAEA,MAAa,CACX0B,WADW,GAEXf,SAAS,GAEX,uBAA4B,uBAA5B,KAA4B,gBAPX,E,iEAWC,GAClB,IAAIgB,EAAe,CACP,CAAE,OAAF,KAAkB,gBAAmB,MACrC,CAAE,OAAF,KAAkB,gBAAmB,MACrC,CAAE,OAAF,KAAkB,gBAAmB,gBACrC,CAAE,OAAF,KAAkB,gBAAmB,iBAE1BpB,KAAK/B,MAAMoD,KAAKV,KAAKD,YAC1CU,OAAiBE,YACZZ,OAAgBY,EAAnB,SACKZ,eAAwBY,EAA3B,gBACIZ,iBAEAA,0B,+BAWV,OAEE,6BAEA,qBACEA,SAAUV,KAAK/B,MADjB,KAEEmC,QAASJ,KAAKX,MAFhB,QAGEc,iBAAkBH,KAHpB,qBAIEM,KAAMN,KAAK/B,MAAMqC,Y,GA7CxB,aCAKiB,EAAU,CACd,CACIb,SADJ,0EAEIc,QAAS,CACL,CACInD,GADJ,IAEI2C,QAAS,sBAEb,CACI3C,GADJ,IAEI2C,QAAS,uBAEb,CACI3C,GADJ,IAEI2C,QAAS,2BAGb,CACI3C,GADJ,IAEI2C,QAAS,8BAGjBjB,GArBJ,KAsBIoB,WAtBJ,sBAuBID,aAvBJ,OAwBIO,kBAxBJ,UAyBIC,WAzBJ,OA0BInC,gBA1BJ,qBA2BIoC,aAAa,IAEjB,CACIjB,SADJ,gCAEIX,GAFJ,KAGIyB,QAAS,CACL,CACInD,GADJ,IAEI2C,QAAS,oCAEb,CACI3C,GADJ,IAEI2C,QAAS,qCAEb,CACI3C,GADJ,IAEI2C,QAAS,wCAEb,CACI3C,GADJ,IAEI2C,QAAS,mCAGjBG,WArBJ,oCAsBID,aAtBJ,OAuBIO,kBAvBJ,UAwBIC,WAxBJ,QAyBInC,gBAzBJ,oCA0BIoC,aAAa,IAEjB,CACIjB,SADJ,sIAEIX,GAFJ,KAGIyB,QAAS,CACL,CACInD,GADJ,IAEI2C,QAAS,gBAEb,CACI3C,GADJ,KAEI2C,QAAS,iBAEb,CACI3C,GADJ,KAEI2C,QAAS,cAGb,CACI3C,GADJ,KAEI2C,QAAS,aAIjBG,WAvBJ,gBAwBID,aAxBJ,OAyBIO,kBAzBJ,UA0BIC,WA1BJ,OA2BInC,gBA3BJ,gBA4BIoC,aAAa,IAEjB,CACIjB,SADJ,2FAEIX,GAFJ,KAGIyB,QAAS,CACL,CACInD,GADJ,KAEI2C,QAAS,iBAEb,CACI3C,GADJ,KAEI2C,QAAS,cAEb,CACI3C,GADJ,KAEI2C,QAAS,gBAGb,CACI3C,GADJ,KAEI2C,QAAS,WAGjBG,WAtBJ,eAuBID,aAvBJ,YAwBIO,kBAxBJ,gCAyBIC,WAzBJ,OA0BInC,gBA1BJ,eA2BIoC,aAAa,KAKNC,EAAmB,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACjC,OAAO,yBAAK1D,UAAWC,GAAhB,sBAAP,IAGW0D,EAAkB,WAC7B,OAAO,qBAAaT,KAAb,EAA4Bf,KAAK,iBChH3ByB,G,MAVH,WACV,OACE,oCACD,kBAAC,EAAD,CAAkBF,KAAK,8CACvB,kBAAC,EAAD,SCLHG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.42f90f5d.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './choice_quiz.css'\r\n\r\n\r\nfunction Question(props) {\r\n  console.log(\"question is\",props.imagepath)\r\n  \r\n  return (\r\n    <div>\r\n    <h6 className={styles.question} id={props.questId}>{props.content}</h6>\r\n  {(props.qtype===\"textimage\")?  <img src= {props.imagepath}  />:<div/>  }\r\n  </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Question;","import React, { useState } from 'react';\r\nimport styles from './choice_quiz.css'\r\n\r\nfunction Answers(props) {\r\n  const [value, setValue] = useState(\"value\");\r\n\r\n  console.log(\"From answers :\" + props.selected_answer)\r\n  const handleChange = e => {\r\n    console.log(\"SEL Value is\" + e.target.value);\r\n    if(props.view === \"studentView\") {\r\n    setValue(e.target.value);\r\n    props.setSelectedAnswer(e.target.value, props.questId);\r\n    }\r\n  }\r\n\r\n  var classDisplay = styles.customButton;\r\n\r\n  console.log(\"from Answer page\" + props.view);\r\n  console.log(\"Ans content & Ans correct \" + props.answerContent + \"   \" + props.correct_answer+\" selc ans :\"+props.selected_answer)\r\n  if (props.view === \"teacherView\" && props.answerContent === props.correct_answer) {\r\n    classDisplay = [styles.customButton, styles.correctans].join(\" \")\r\n  }\r\n  if (props.view === \"gradeView\" || props.view === \"feedbackView\") {\r\n    if ((props.selected_answer === props.correct_answer && props.answerContent === props.selected_answer)|| props.answerContent === props.correct_answer)\r\n      classDisplay = [styles.customButton, styles.correctans].join(\" \");\r\n    else if (props.selected_answer === props.answerContent)\r\n      classDisplay = [styles.customButton, styles.wrongans].join(\" \");\r\n  }\r\n\r\n  console.log(\"classDisplay IS:\" + classDisplay);\r\n\r\n  return (\r\n\r\n    <div className=\"col-md-6 col-sm-12 col-xs-12\">\r\n      <input\r\n        type=\"button\"\r\n        className={classDisplay}\r\n        name=\"buttonGroup\"\r\n        value={props.answerContent}\r\n        disabled={props.selected_answer === props.answerContent ? true : false}\r\n        onClick={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Answers;","import React, {useState} from 'react';\r\nimport styles from './choice_quiz.css';\r\n\r\nfunction AnswersDiv(props) {\r\n    const [value,setValue] = useState(\"\");\r\n\r\n    const handleChange = e => {\r\n      if(props.view === \"studentView\") {\r\n      console.log(\"SEL Value is\"+e.target.value);\r\n      setValue(e.target.value);\r\n      props.setSelectedAnswer(e.target.name,props.questId);\r\n      }\r\n    }\r\n\r\n    var classDisplay = styles.customButton;\r\n    console.log(\"from Answer page\"+props.view);\r\n    console.log(\"Ans content & Ans correct \" + props.answerContent +\"   \"+ props.correct_answer )\r\n    if (props.view === \"teacherView\" && props.answerContent === props.correct_answer) {\r\n      classDisplay = [styles.customButton, styles.correctans].join(\" \")\r\n    }\r\n    if (props.view === \"gradeView\" || props.view === \"feedbackView\") {\r\n      if ((props.selected_answer === props.correct_answer && props.answerContent === props.selected_answer) || props.answerContent === props.correct_answer)\r\n        classDisplay = [styles.customButton, styles.correctans].join(\" \");\r\n      else if (props.selected_answer === props.answerContent)\r\n      classDisplay = [styles.customButton, styles.wrongans].join(\" \");\r\n     }\r\n  \r\n  console.log(\"classDisplay IS:\"+classDisplay);    \r\n\r\n    return (\r\n        <div className=\"col-md-6 col-sm-12 col-xs-12\">\r\n            {/* <img src={props.answerContent} /> */}\r\n            <input\r\n        type=\"image\"\r\n        className={classDisplay}\r\n        name={props.answerContent}\r\n        src={props.answerContent}\r\n        disabled={props.selected_answer === props.answerContent? true : false}\r\n        onClick={handleChange}\r\n            />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AnswersDiv;","import React from \"react\";\r\n\r\n\r\n/**\r\n * @param {JSON} props.quiz = The JSON you get back from your server\r\n * @param {Integer} props.current_question - Index of current question. Can be used to quickly get the question from JSON\r\n * @param {String} props.selected_answer - The selected answer (null if none selected)\r\n */\r\nconst result = props => {\r\n  const validateAnswer = () => {\r\n      console.log(\"From validate ans of result js :\"+props.quiz.questions[0].selected_answer);\r\n     \r\n      let state = [];\r\n      props.quiz.questions.map((qus)=>{\r\n        console.log(\"Question:\"+qus.Id);\r\n        console.log(\"sel ans from result js pagess:\"+qus.selected_answer)\r\n        state.push({\r\n          \"QuesId\" : qus.Id,\r\n          \"selected_answer\": qus.selected_answer\r\n        }\r\n        )\r\n      })\r\n      console.log(state);\r\nconsole.log(JSON.stringify(state))\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"submitBtn\" onClick={validateAnswer}>\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default result;","import React, { Component } from 'react'\r\nimport Question from './Question';\r\nimport Answers from './Answers'\r\nimport AnswersDiv from './AnswersDiv';\r\nimport Result from './result';\r\nimport styles from './choice_quiz.css'\r\n\r\nclass Choice extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.renderAnswerOptions = this.renderAnswerOptions.bind(this);\r\n        this.renderAnswerOptionsDiv = this.renderAnswerOptionsDiv.bind(this);\r\n        this.state = {\r\n            quiz: {\r\n                questions: [\r\n                    {\r\n                        Id: \"\",\r\n                        selected_answer: null\r\n                    },\r\n                    {\r\n                        Id: \"\",\r\n                        selected_answer: null\r\n                    },\r\n                    {\r\n                        Id: \"\",\r\n                        selected_answer: null\r\n                    },\r\n                    {\r\n                        Id: \"\",\r\n                        selected_answer: null\r\n                    }]\r\n            },\r\n        }\r\n    }\r\n\r\n    setAnswerDetails = (ans, qid) => {\r\n        console.log(\"Frm Answer Details paage\" + ans+\"    :\"+qid);\r\n        this.setState(this.state.quiz.questions.map(ques => {\r\n        console.log(\"FFFFF\"+ques.Id);\r\n            if( ques.Id === qid) {\r\n                console.log(\"From if loop\")\r\n                ques.selected_answer = ans\r\n            }\r\n            else\r\n                console.log(\"Frm else oooop\")\r\n            \r\n    }));\r\n         this.state.quiz.questions.map(temp => console.log(\"SSS\"+temp.selected_answer))\r\n    }\r\n\r\n    renderAnswerOptions(key,questId,selAns,corrAns) {\r\n\r\n        console.log(\"this.propssssss\" + this.props.onAnswerSelected+\"view:\"+this.props.view);\r\n        console.log(\"Frm render options \"+questId+\"selAns is \"+selAns+ \"Correct Ans :\"+corrAns);\r\n        return (\r\n\r\n            <div className=\"col-md-6 col-sm-12 col-xs-12\">\r\n                <Answers\r\n                    answerContent={key.content}\r\n                    onAnswerSelected={this.props.onAnswerSelected}\r\n                    disable={this.props.disable}\r\n                    setSelectedAnswer={this.setAnswerDetails}\r\n                    questId = {questId}\r\n                    view={this.props.view}\r\n                    selected_answer={selAns}\r\n                    correct_answer = {corrAns}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderAnswerOptionsDiv(key,questId,selAns,corrAns) {\r\n        console.log(\"inside div answer\", key.content)\r\n\r\n        return (\r\n            <div className=\"col-md-6 col-sm-12 col-xs-12\">\r\n                <AnswersDiv\r\n                    answerContent={key.content}\r\n                    onAnswerSelected={this.props.onAnswerSelected}\r\n                    disable={this.props.disable}\r\n                    setSelectedAnswer={this.setAnswerDetails}\r\n                    questId = {questId}\r\n                    view={this.props.view}\r\n                    selected_answer={selAns}\r\n                    correct_answer = {corrAns}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var selAns = \"\";\r\n        return (\r\n            <div>\r\n                {this.props.question.map((quest, index) => {\r\n                    {this.state.quiz.questions[index].Id=quest.Id\r\n                     if(this.props.view === \"studentView\")   \r\n                        selAns = this.state.quiz.questions[index].selected_answer;\r\n                     else\r\n                        selAns = quest.selected_answer;\r\n                    }\r\n                    return(\r\n                    <div className={[styles.card,styles.lessoncard].join(\" \")}>\r\n                        <div className={styles.cardHeader}>\r\n                            <h5>Question <span>{index + 1}</span></h5>\r\n                        </div>\r\n                        <div className={styles.cardBlock}>\r\n                            <div className={styles.popuptxt} key={index}></div>\r\n                            <Question content={quest.question} questId={quest.Id} imagepath={quest.questionImagePath} qtype={quest.questionType} />\r\n                            \r\n\r\n                            <div className=\"row\">\r\n                                {(quest.AnswerType === \"text\") ? quest.answers.map((key => this.renderAnswerOptions(key,quest.Id,selAns, quest.correctAns))) : quest.answers.map((key => this.renderAnswerOptionsDiv(key,quest.Id,selAns,quest.correctAns)))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                })}\r\n\r\n              {  (this.props.view === \"studentView\")?<Result  {...this.state} /> : \"\" }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Choice;\r\n","import React, { Component } from 'react';\r\nimport Choice from './Choice';\r\n\r\n\r\n class MultiChoice extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {     \r\n      correctAns: '',\r\n      disable: false\r\n    };\r\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n  }\r\n   \r\n\r\n  handleAnswerSelected(event) {\r\n    var stuSelection = [\r\n                { \"QuesId\": \"Q1\", \"selected_answer\": null },\r\n                { \"QuesId\": \"Q2\", \"selected_answer\": null },\r\n                { \"QuesId\": \"Q3\", \"selected_answer\": \"A.Mechanical\" },\r\n                { \"QuesId\": \"Q4\", \"selected_answer\": \"C.Mechanical\" }\r\n             ]\r\n    const correctAnsList = this.props.data.map((question) => {\r\n      stuSelection.map(students => {\r\n        if(question.Id === students.QuesId) {\r\n          if(question.correctAns === students.selected_answer){\r\n              question.grade_points = 1;\r\n          } else\r\n              question.grade_points = 0;\r\n        }\r\n\r\n      }) \r\n\r\n    });\r\n  \r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      \r\n      <div>\r\n         \r\n      <Choice\r\n        question={this.props.data}\r\n        disable={this.state.disable}\r\n        onAnswerSelected={this.handleAnswerSelected}\r\n        view={this.props.view}\r\n      />\r\n    \r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default MultiChoice ;\r\n","import React from 'react'\nimport styles from './styles.module.css';\nimport MultiChoice from './ChooseChkBox/MultiChoice';\n\nconst quizApi = [\n  {\n      question: \"Which two forms of energy does the Earth receive directly from the Sun?\",\n      answers: [\n          {\n              id: \"1\",\n              content: \"A. Light and sound\"\n          },\n          {\n              id: \"2\",\n              content: \"B.Light and thermal\"\n          },\n          {\n              id: \"3\",\n              content: \"C. Electrical and light\"\n          },\n\n          {\n              id: \"4\",\n              content: \"D. Mechanical and thermal\"\n          }\n      ],\n      Id:\"Q1\",\n      correctAns: \"B.Light and thermal\",\n      questionType: \"text\",\n      questionImagePath : \"noimage\",\n      AnswerType:\"text\",\n      selected_answer:\"A. Light and sound\",\n      grade_points:\"\"\n  },\n  {\n      question: \"select the picture of euglena\",\n      Id:\"Q2\",\n      answers: [\n          {\n              id: \"5\",\n              content: \"images/slides/science/elodea.png\"\n          },\n          {\n              id: \"6\",\n              content: \"images/slides/science/euglena.png\"\n          },\n          {\n              id: \"7\",\n              content: \"images/slides/science/paramecium.png\"\n          },\n          {\n              id: \"8\",\n              content: \"images/slides/science/soil.png\"\n          }\n      ],\n      correctAns: \"images/slides/science/euglena.png\",\n      questionType: \"text\",\n      questionImagePath : \"noimage\",\n      AnswerType:\"image\",\n      selected_answer:\"images/slides/science/euglena.png\",\n      grade_points:\"\"        \n  },\n  {\n      question: \"Students in a science class were lighting bulbs by attaching them to batteries with wires. What form of energy were they exploring?\",\n      Id:\"Q3\",\n      answers: [\n          {\n              id: \"9\",\n              content: \"A.Mechanical\"\n          },\n          {\n              id: \"10\",\n              content: \"B. Electrical\"\n          },\n          {\n              id: \"11\",\n              content: \"C. Thermal\"\n          },\n\n          {\n              id: \"12\",\n              content: \"D. Sound\"\n          }\n      ],\n\n      correctAns:\"B. Electrical\",\n      questionType: \"text\",\n      questionImagePath : \"noimage\",\n      AnswerType:\"text\",\n      selected_answer:\"B. Electrical\",\n      grade_points:\"\"        \n  },\n  {\n      question: \"This boy is using a bow and arrow. What form of energy does a bow and arrow demonstrate?\",\n      Id:\"Q4\",\n      answers: [\n          {\n              id: \"13\",\n              content: \"A. Electrical\"\n          },\n          {\n              id: \"14\",\n              content: \"B. Thermal\"\n          },\n          {\n              id: \"15\",\n              content: \"C.Mechanical\"\n          },\n\n          {\n              id: \"16\",\n              content: \"D.Heat\"\n          }\n      ],\n      correctAns:  \"C.Mechanical\",\n      questionType :\"textimage\",\n      questionImagePath : \"images/slides/science/boy.jpg\",\n      AnswerType:\"text\",\n      selected_answer:\"C.Mechanical\",\n      grade_points:\"\"        \n  }\n\n];\n\nexport const ExampleComponent = ({ text }) => {\n  return <div className={styles.test}>Example Component: {text}</div>\n}\n\nexport const MultiChoiceQuiz = () => {\n  return <MultiChoice data={quizApi} view=\"studentView\"/>\n}\n","import React from 'react'\n\nimport { ExampleComponent } from 'bloom-quiz-parttype'\nimport {MultiChoiceQuiz} from 'bloom-quiz-parttype'\nimport 'bloom-quiz-parttype/dist/index.css'\n// import 'bloom-quiz-parttype/dist/choice_quiz.css'\n\nconst App = () => {\n  return (\n    <>\n   <ExampleComponent text=\"Create React Library Example 😄\" />\n   <MultiChoiceQuiz />\n   \n   </>\n   )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}